-- SQL PARA APLICAÇÃO PETSHOP METAWAY

CREATE TABLE IF NOT EXISTS ROLES (
	ID SERIAL NOT NULL,
	NAME CHARACTER VARYING(20) NOT NULL,
	CONSTRAINT ROLES_PKEY PRIMARY KEY(ID),
	CONSTRAINT ROLES_NAME_UNIQUE UNIQUE (NAME)
);

INSERT INTO ROLES(ID, NAME) VALUES (DEFAULT, 'ADMIN');
INSERT INTO ROLES(ID, NAME) VALUES (DEFAULT, 'CUSTOMER');

CREATE TABLE IF NOT EXISTS ARCHIVES (
	ID SERIAL NOT NULL,
	BASE_64 TEXT NOT NULL,
	BASE_64_MINI TEXT,
	CONSTRAINT ARCHIVES_PKEY PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS USERS (
	ID SERIAL NOT NULL,
	CPF CHARACTER VARYING(20) NOT NULL,
	PASSWORD CHARACTER VARYING(250) NOT NULL,
	NAME CHARACTER VARYING(250) NOT NULL,
	ENABLED BOOL NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	ARCHIVE_ID INTEGER,
	CREATED_AT TIMESTAMP(6) NOT NULL,
	UPDATED_AT TIMESTAMP(6) NOT NULL,
	ACCOUNT_DELETED BOOL NOT NULL,
	CONSTRAINT USERS_PKEY PRIMARY KEY (ID),
	CONSTRAINT USERS_CPF_UNIQUE UNIQUE(CPF),
	CONSTRAINT ROLES_USERS_FKEY FOREIGN KEY (ROLE_ID)
		REFERENCES ROLES(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION,
	CONSTRAINT ARCHIVES_USERS_FKEY FOREIGN KEY (ARCHIVE_ID)
		REFERENCES ARCHIVES(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION
);

INSERT INTO	USERS (ID, CPF, PASSWORD, NAME, ENABLED, ROLE_ID, ARCHIVE_ID, CREATED_AT, UPDATED_AT, ACCOUNT_DELETED)
VALUES (DEFAULT, '47135971043', '$2a$10$q4yYdelwX/mV8yvNJMikOu3cfBDnZMoYuF/zJzRwAa71atf9RHp4y', 
		'Marciano Metaway', TRUE, 1, NULL, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, FALSE);


CREATE TABLE IF NOT EXISTS ADDRESS (
	ID SERIAL NOT NULL,
	CUSTOMER_ID INTEGER NOT NULL,
	STREET CHARACTER VARYING(250) NOT NULL,
	DISTRICT CHARACTER VARYING(250) NOT NULL,
	COMPLEMENT CHARACTER VARYING(250) NOT NULL,
	CITY CHARACTER VARYING(250) NOT NULL,
	STATE CHARACTER VARYING(250) NOT NULL,
	POSTAL_CODE CHARACTER VARYING(10) NOT NULL,
	TAG CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT ADDRESS_PKEY PRIMARY KEY (ID),
	CONSTRAINT USERS_ADDRESS_FKEY FOREIGN KEY (CUSTOMER_ID)
		REFERENCES USERS(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS BREEDS (
	ID SERIAL NOT NULL,
	NAME CHARACTER VARYING(250) NOT NULL,
	DESCRIPTION TEXT NOT NULL,
	CONSTRAINT BREEDS_PKEY PRIMARY KEY (ID)
);

insert into breeds (id, name, description) values 
(default, 'Persa', 'Raça de gato com pelos longos e temperamento dócil.'),
(default, 'Canário belga', 'Raça de pássaro conhecida pelo seu belo canto.'),
(default, 'Coelho angorá', 'Raça de coelho com pelos extremamente longos e macios.'),
(default, 'Golden retriever', 'Cachorro amigável, inteligente e ótimo para famílias.'),
(default, 'Papagaio-verdadeiro', 'Ave falante e muito sociável.'),
(default, 'Porquinho-da-índia peruano', 'Roedor com pelos longos e personalidade dócil.'),
(default, 'Husky siberiano', 'Cão de trabalho resistente ao frio, com olhos claros e energia elevada.'),
(default, 'Maine coon', 'Uma das maiores raças de gatos, conhecida por sua inteligência e sociabilidade.'),
(default, 'Periquito australiano', 'Pássaro pequeno, colorido e fácil de domesticar.'),
(default, 'Mini pig', 'Porco de pequeno porte popular como animal de estimação.'),
(default, 'Labrador retriever', 'Cachorro carinhoso, inteligente e ótimo para trabalho assistido.'),
(default, 'Bengal', 'Gato de aparência selvagem, com pelagem manchada e personalidade ativa.'),
(default, 'Cacatua branca', 'Ave exótica e muito sociável, famosa por seu topete levantado.'),
(default, 'Furão', 'Mamífero pequeno, curioso e brincalhão, popular como animal de estimação.'),
(default, 'Dálmata', 'Raça de cachorro famosa por sua pelagem branca com manchas pretas.'),
(default, 'Ragdoll', 'Gato grande e dócil que relaxa completamente quando é pego no colo.'),
(default, 'Arara azul', 'Ave grande e exótica, símbolo da fauna brasileira.'),
(default, 'Chinchila', 'Roedor de pelagem extremamente macia, ativo durante a noite.');


CREATE TABLE IF NOT EXISTS CONTACTS (
	UUID CHARACTER VARYING(250) NOT NULL,
	CUSTOMER_ID INTEGER NOT NULL,
	TAG CHARACTER VARYING(250) NOT NULL,
	TYPE CHARACTER VARYING(20) NOT NULL,
	VALUE CHARACTER VARYING(250) NOT NULL,
	MESSAGE TEXT NOT NULL,
	CREATED_AT TIMESTAMP(6) NOT NULL,
	UPDATED_AT TIMESTAMP(6) NOT NULL,
	CONSTRAINT CONTACTS_PKEY PRIMARY KEY (UUID),
	CONSTRAINT USERS_CONTACTS_FKEY FOREIGN KEY (CUSTOMER_ID)
		REFERENCES USERS(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS PETS (
	ID SERIAL NOT NULL,
	NAME CHARACTER VARYING(250) NOT NULL,
	CUSTOMER_ID INTEGER NOT NULL,
	BREED_ID INTEGER NOT NULL,
	BIRTH_DATE DATE NOT NULL,
	GENDER CHARACTER VARYING(250) NOT NULL,
	ARCHIVE_ID INTEGER,
	CONSTRAINT PETS_PKEY PRIMARY KEY (ID),
	CONSTRAINT USERS_PETS_FKEY FOREIGN KEY (CUSTOMER_ID)
		REFERENCES USERS(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION,
	CONSTRAINT BREEDS_PETS_FKEY FOREIGN KEY (BREED_ID)
		REFERENCES BREEDS(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION,
	CONSTRAINT ARCHIVES_PETS_FKEY FOREIGN KEY (ARCHIVE_ID)
		REFERENCES ARCHIVES(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS PET_CARE (
	UUID CHARACTER VARYING(250) NOT NULL,
	PET_ID INTEGER NOT NULL,
	DESCRIPTION TEXT NOT NULL,
	PRICE NUMERIC(19,2) NOT NULL,
	STATUS CHARACTER VARYING(20) NOT NULL,
	DATE TIMESTAMP(6) NOT NULL,
	CREATED_AT TIMESTAMP(6) NOT NULL,
	UPDATED_AT TIMESTAMP(6) NOT NULL,
	CONSTRAINT PET_CARE_PKEY PRIMARY KEY (UUID),
	CONSTRAINT PETS_PET_CARE_FKEY FOREIGN KEY (PET_ID)
		REFERENCES PETS(ID) MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE NO ACTION
);